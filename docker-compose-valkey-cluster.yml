networks:
  valkey-cluster-network:
    driver: bridge
  benchmark-network:
    external: true

volumes:
  valkey-node1-data:
  valkey-node2-data:
  valkey-node3-data:
  valkey-node4-data:
  valkey-node5-data:
  valkey-node6-data:

services:
  valkey-node1:
    image: valkey/valkey:8.1
    container_name: ${COMPOSE_PROJECT_NAME:-ratelimit_bench}-valkey-node1
    restart: on-failure:3
    command: >
      valkey-server --cluster-enabled yes --cluster-config-file nodes.conf 
      --cluster-node-timeout 5000 --appendonly yes --port 8080
    volumes:
      - valkey-node1-data:/data
    networks:
      - valkey-cluster-network
      - benchmark-network
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "valkey-cli", "-p", "8080", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

  valkey-node2:
    image: valkey/valkey:8.1
    container_name: ${COMPOSE_PROJECT_NAME:-ratelimit_bench}-valkey-node2
    restart: on-failure:3
    command: >
      valkey-server --cluster-enabled yes --cluster-config-file nodes.conf 
      --cluster-node-timeout 5000 --appendonly yes --port 8080
    volumes:
      - valkey-node2-data:/data
    networks:
      - valkey-cluster-network
      - benchmark-network
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD", "valkey-cli", "-p", "8080", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

  valkey-node3:
    image: valkey/valkey:8.1
    container_name: ${COMPOSE_PROJECT_NAME:-ratelimit_bench}-valkey-node3
    restart: on-failure:3
    command: >
      valkey-server --cluster-enabled yes --cluster-config-file nodes.conf 
      --cluster-node-timeout 5000 --appendonly yes --port 8080
    volumes:
      - valkey-node3-data:/data
    networks:
      - valkey-cluster-network
      - benchmark-network
    ports:
      - "8083:8080"
    healthcheck:
      test: ["CMD", "valkey-cli", "-p", "8080", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

  valkey-node4:
    image: valkey/valkey:8.1
    container_name: ${COMPOSE_PROJECT_NAME:-ratelimit_bench}-valkey-node4
    restart: on-failure:3
    command: >
      valkey-server --cluster-enabled yes --cluster-config-file nodes.conf 
      --cluster-node-timeout 5000 --appendonly yes --port 8080
    volumes:
      - valkey-node4-data:/data
    networks:
      - valkey-cluster-network
      - benchmark-network
    ports:
      - "8084:8080"
    healthcheck:
      test: ["CMD", "valkey-cli", "-p", "8080", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

  valkey-node5:
    image: valkey/valkey:8.1
    container_name: ${COMPOSE_PROJECT_NAME:-ratelimit_bench}-valkey-node5
    restart: on-failure:3
    command: >
      valkey-server --cluster-enabled yes --cluster-config-file nodes.conf 
      --cluster-node-timeout 5000 --appendonly yes --port 8080
    volumes:
      - valkey-node5-data:/data
    networks:
      - valkey-cluster-network
      - benchmark-network
    ports:
      - "8085:8080"
    healthcheck:
      test: ["CMD", "valkey-cli", "-p", "8080", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

  valkey-node6:
    image: valkey/valkey:8.1
    container_name: ${COMPOSE_PROJECT_NAME:-ratelimit_bench}-valkey-node6
    restart: on-failure:3
    command: >
      valkey-server --cluster-enabled yes --cluster-config-file nodes.conf 
      --cluster-node-timeout 5000 --appendonly yes --port 8080
    volumes:
      - valkey-node6-data:/data
    networks:
      - valkey-cluster-network
      - benchmark-network
    ports:
      - "8086:8080"
    healthcheck:
      test: ["CMD", "valkey-cli", "-p", "8080", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

  valkey-cluster-setup:
    image: valkey/valkey:8.1
    container_name: ${COMPOSE_PROJECT_NAME:-ratelimit_bench}-valkey-cluster-setup
    depends_on:
      valkey-node1:
        condition: service_healthy
      valkey-node2:
        condition: service_healthy
      valkey-node3:
        condition: service_healthy
      valkey-node4:
        condition: service_healthy
      valkey-node5:
        condition: service_healthy
      valkey-node6:
        condition: service_healthy
    networks:
      - valkey-cluster-network
      - benchmark-network
    command: >
      bash -c '
        echo "Waiting for nodes to be ready..."
        echo "All nodes are ready. Creating cluster..."
        valkey-cli -h ${COMPOSE_PROJECT_NAME:-ratelimit_bench}-valkey-node1 -p 8080 CLUSTER NODES
      '
